---
# Source: argo-rollouts/charts/argo-rollouts/templates/controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts
  namespace: "github-runner"
  labels:
    app.kubernetes.io/component: rollouts-controller
    helm.sh/chart: argo-rollouts-2.38.2
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/instance: argo-rollouts
    app.kubernetes.io/version: "v1.7.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-rollouts
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: rollouts-controller
      app.kubernetes.io/name: argo-rollouts
      app.kubernetes.io/instance: argo-rollouts
  strategy:
    type: RollingUpdate
  replicas: 2
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-rollouts
        app.kubernetes.io/instance: argo-rollouts
        app.kubernetes.io/component: rollouts-controller
    spec:
      serviceAccountName: argo-rollouts
      containers:
      - image: "quay.io/argoproj/argo-rollouts:v1.7.2"
        args:
        - --healthzPort=8080
        - --metricsport=8090
        - "--loglevel=info"
        - "--logformat=text"
        - "--kloglevel=0"
        - --leader-elect
        imagePullPolicy: IfNotPresent
        name: argo-rollouts
        ports:
        - containerPort: 8090
          name: metrics
        - containerPort: 8080
          name: healthz
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        volumeMounts:
        - name: plugin-bin
          mountPath: /home/argo-rollouts/plugin-bin
        - name: tmp
          mountPath: /tmp
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: plugin-bin
        emptyDir: {}
      - name: tmp
        emptyDir: {}

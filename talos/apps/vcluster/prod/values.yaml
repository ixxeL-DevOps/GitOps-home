vcluster:
  telemetry:
    enabled: false
  sync:
    toHost:
      ingresses:
        enabled: true
  networking:
    replicateServices:
      toHost: []
      fromHost: []
    advanced:
      clusterDomain: "cluster.local"
      fallbackHostCluster: true
  exportKubeConfig:
    context: vk-k3s-prod
  controlPlane:
    statefulSet:
      persistence:
        volumeClaim:
          enabled: false
    distro:
      k3s:
        enabled: true
        command: []
        extraArgs:
        - --write-kubeconfig=/data/k3s-config/kube-config.yaml
        - --data-dir=/data
        - --disable=traefik,servicelb,metrics-server,local-storage,coredns
        - --disable-network-policy
        - --disable-agent
        - --disable-cloud-controller
        - --egress-selector-mode=disabled
        - --flannel-backend=none
        - --kube-apiserver-arg=bind-address=127.0.0.1
        imagePullPolicy: ""
        image:
          repository: "rancher/k3s"
          tag: v1.30.2-k3s1
        resources:
          limits:
            cpu: 750m
            memory: 768Mi
          requests:
            cpu: 100m
            memory: 128Mi
    ingress:
      enabled: true
      host: 'vk-k3s-prod.vcluster.fredcorp.com'
      pathType: ImplementationSpecific
      annotations:
        # ingress.cilium.io/force-https: "true"
        # ingress.cilium.io/tls-passthrough: "true"
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        nginx.ingress.kubernetes.io/ssl-passthrough: "true" # must be passthrough, or check doc for other methods
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
      spec:
        ingressClassName: "nginx"
          # tls: []
    proxy:
      bindAddress: "0.0.0.0"
      port: 8443
      extraSANs: 
      - 'vk-k3s-prod.vcluster.fredcorp.com'
      - 'vk-k3s-prod.vk-prod.svc.cluster.local'
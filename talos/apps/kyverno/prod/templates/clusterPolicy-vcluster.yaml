---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: vcluster-sync
spec:
  # generateExistingOnPolicyUpdate: true
  rules:
  - name: sync-secret
    skipBackgroundRequests: true
    match:
      any:
      - resources:
          names:
          - "vc-*"
          kinds:
          - Secret
    exclude:
      any:
      - resources:
          namespaces:
          - kube-system
          - default
          - kube-public
          - kyverno
    context:
    - name: namespace
      variable:
        value: '{{ "{{" }} request.object.metadata.namespace{{ "}}" }}'
    - name: name
      variable:
        value: '{{ "{{" }} request.object.metadata.name{{ "}}" }}'
    - name: ca
      variable: 
        value: '{{ "{{" }} request.object.data.\"certificate-authority\" {{ "}}" }}'
    - name: cert
      variable: 
        value: '{{ "{{" }} request.object.data.\"client-certificate\" {{ "}}" }}'
    - name: key
      variable: 
        value: '{{ "{{" }} request.object.data.\"client-key\" {{ "}}" }}'
    - name: vclusterName
      variable:
        value: '{{ "{{" }} replace_all(namespace, 'vcluster-', '') {{ "}}" }}'
        jmesPath: 'to_string(@)'
    - name: vclusterEnv
      variable:
        value: '{{ "{{" }} replace_all(namespace, 'vk-', '') {{ "}}" }}'
        jmesPath: 'to_string(@)'
    generate:
      kind: Secret
      apiVersion: v1
      name: '{{ "{{" }} vclusterName {{ "}}" }}'
      namespace: argocd
      synchronize: true
      generateExisting: true
      data:
        kind: Secret
        metadata:
          labels:
            argocd.argoproj.io/secret-type: cluster
        stringData:
          name: '{{ "{{ }}vclusterName {{ }}" }}'
          server: 'https://vk-k3s-{{ "{{"}} vclusterEnv {{"}}" }}.{{ "{{"}} namespace {{"}}" }}.svc.cluster.local:443'
          config: |
            {
              "tlsClientConfig": {
                "insecure": false,
                "caData": '{{ "{{" }} ca {{ "}}" }}',
                "certData": '{{ "{{" }} cert {{ "}}" }}',
                "keyData": '{{ "{{" }} key {{ "}}" }}'
              }
            }
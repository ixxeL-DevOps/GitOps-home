---
name: Helm Manifests Diff - Rendered Manifest (Chart.yaml)
on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
    paths:
      - '**/Chart.yaml'
      - '**/Chart.yml'

jobs:
  helm-diff-chart:
    runs-on: self-hosted
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find modified Chart.yaml files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **/Chart.yaml
            **/Chart.yml

      - name: Generate diffs for each Chart
        id: gen-pr-chart
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          mkdir -p target
          mkdir -p source
          echo "CHART_FILES=${ALL_CHANGED_FILES}"
          
          for file in ${ALL_CHANGED_FILES}; do
            echo "Processing $file"
            
            CHART_DIR=$(dirname "$file")
            ENV=$(echo "$CHART_DIR" | awk -F'/' '{print $2}')
            NS=$(echo "$CHART_DIR" | awk -F'/' '{print $4}')

            CHART_NAME=$(yq e '.name' "$file")
            CHART_VERSION=$(yq e '.version' "$file")

            echo "chart infos : dir -> $CHART_DIR name -> $CHART_NAME version -> $CHART_VERSION"
            
            for dep in $(yq e -o=j -I=0 '.dependencies[]' "$file")
            do
              echo "$dep" | jq -C
              DEP_NAME=$(echo "$dep" | jq -r '.name')
              DEP_VERSION=$(echo "$dep" | jq -r '.version')
              DEP_REPO=$(echo "$dep" | jq -r '.repository')
              helm repo add "$DEP_NAME" "$DEP_REPO"
            done
            helm repo update
            helm dependency update "$CHART_DIR"
            helm template "$CHART_NAME" "$CHART_DIR" > "target/${ENV}_${NS}_${CHART_NAME}_manifest_pr.yaml"
            yq e -C target/${ENV}_${NS}_${CHART_NAME}_manifest_pr.yaml
            
            git checkout origin/main -- "$file"
            MAIN_CHART_VERSION=$(yq e '.version' "$file")
            
            for dep in $(yq e -o=j -I=0 '.dependencies[]' "$file")
            do
              echo "$dep" | jq -C
              DEP_NAME=$(echo "$dep" | jq -r '.name')
              DEP_VERSION=$(echo "$dep" | jq -r '.version')
              DEP_REPO=$(echo "$dep" | jq -r '.repository')
              helm repo add "$DEP_NAME" "$DEP_REPO"
            done
            
            helm dependency update "$CHART_DIR"
            helm template "$CHART_NAME" "$CHART_DIR" > "source/${ENV}_${NS}_${CHART_NAME}_manifest_main.yaml"
            yq e -C source/${ENV}_${NS}_${CHART_NAME}_manifest_main.yaml
          done

      - name: Generate dyff on release
        id: dyff-helm
        uses: ixxeL-DevOps/gha-templates/.github/actions/dyff@main
        with:
          source: source/*_manifest_main.yaml
          target: target/*_manifest_pr.yaml

      - name: Comment on PR for helm dyff
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          DYFF_RESULTS: ${{ steps.dyff-helm.outputs.DYFF_RESULT }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            #### Dyff helm: \`chart helm dyff\`
            \`\`\`py
            ${process.env.DYFF_RESULTS}
            \`\`\`
            `;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: output
            })
